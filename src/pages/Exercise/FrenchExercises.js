import Head from 'next/head';
import React, { useEffect, useState } from 'react';
import styles from '../../styles/quiz/quizpage.module.css';
import Image from 'next/image';
import { quiz } from "../../Data/ExerciseData/french"; // Importing the quiz data
import Link from 'next/link';
import { FaLock } from 'react-icons/fa'; // Import a lock icon
import { useSelector } from 'react-redux'; // To access authentication status from Redux

export default function FrenchQuizes() {
  const { isAuthenticated } = useSelector((state) => state.auth); // Access authentication status
  const unlockedPages = useSelector((state) => state.unlockedExercises.unlockedExercisesFrench);
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true); // Set to true when client-side is ready
  }, []);

  if (!isClient) {
    // Optionally return a loader or nothing until the client is ready
    return null;
  }

  return (
    <>
      <Head>
        <title>French Exercise</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo/newlogo1.png" />
      </Head>
      <main>
        <div className={styles.container}>
          <div className={styles.headcont}>
            <div className={styles.mainheading}>French Exercise</div>
          </div>

          <div className={styles.cards1}>
            {quiz.map((data, index) => {
              const isUnlocked = unlockedPages.includes(data.quiz);
              console.log(isUnlocked)
              // Determine if the quiz should be locked
              const isLocked = !isAuthenticated && index > 1;
              return (
                <div key={data.quiz} className={`${styles.card1} ${isLocked ? styles.locked : ''}`}>
                  {isUnlocked ? <Link href={`FrenchExercise/${data.quiz}`} className={styles.link}>
                    <div className={styles.imgcont}>
                      <Image className={styles.img5} src={'/assests/1.png'} width={500} height={500} alt="img" />
                    </div>
                    <div className={styles.info}>
                      <div className={styles.name}>{data.name}</div>
                      <div className={styles.level}>Level: {data.level}</div>
                      <div className={styles.topic}>Topic: {data.topic}</div>
                    </div>
                  </Link>:                                <div className={styles.locked2}>
                <div className={styles.lockOverlay3}>
                  <FaLock />
                  <p>Locked</p>
                </div>
                    <div className={styles.imgcont}>
                      <Image className={styles.img5} src={'/assests/1.png'} width={500} height={500} alt="img" />
                    </div>
                    <div className={styles.info}>
                      <div className={styles.name}>{data.name}</div>
                      <div className={styles.level}>Level: {data.level}</div>
                      <div className={styles.topic}>Topic: {data.topic}</div>
                    </div>
                  </div>}
                  {isLocked && (
                    <div className={styles.lockOverlay}>
                      <FaLock className={styles.lockIcon} />
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        </div>
      </main>
    </>
  );
}
